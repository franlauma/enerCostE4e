rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Protects user profiles, allowing only the owning user to read and write their data.
     * @path /users/{userId}
     * @allow (create) - User A can create their profile if request.auth.uid == userId.
     * @allow (get, update, delete) - User A can get, update or delete their profile if request.auth.uid == userId.
     * @deny (create, get, update, delete) - User B cannot create, get, update, or delete User A's profile.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      //Function Definition
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false; // User listing is not allowed.
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }

    /**
     * @description Protects simulation data, allowing only the owning user to read and write their simulations.
     * @path /users/{userId}/simulations/{simulationId}
     * @allow (create) - User A can create a simulation under their profile.
     * @allow (get, update, delete) - User A can get, update or delete their simulation under their profile.
     * @deny (create, get, update, delete) - User B cannot create, get, update, or delete User A's simulations.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId}/simulations/{simulationId} {
      //Function Definition
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }

    /**
     * @description Allows any authenticated user to read tariff data, but restricts writes.
     * @path /tariffs/{tariffId}
     * @allow (get, list) - Any authenticated user can read tariff data.
     * @deny (create, update, delete) - No user can create, update, or delete tariff data (admin-only in future versions).
     * @principle Public read, restricted write.
     */
    match /tariffs/{tariffId} {
       //Function Definition
      function isSignedIn() {
        return request.auth != null;
      }
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}