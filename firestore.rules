/**
 * @fileoverview Firestore Security Rules for EnerCost Analyzer.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model. Each user can only
 * access their own profile data and simulations. This ensures data privacy
 * and prevents unauthorized access.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profiles, with the userId as the document ID.
 * - /users/{userId}/simulations/{simulationId}: Stores simulation data for each user.
 *
 * Key Security Decisions:
 * - User listing is explicitly denied.
 * - Only authenticated users can create, read, update, or delete their own user data and simulations.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces user-ownership for profiles stored under /users/{userId}.
     * @path /users/{userId}
     * @allow (create) - Authenticated user with UID 'user123' creates a new user document with ID 'user123'.
     * @allow (get, update, delete) - Authenticated user with UID 'user123' reads, updates, or deletes their own user document with ID 'user123'.
     * @deny (create) - Authenticated user with UID 'user456' attempts to create a user document with ID 'user123'.
     * @deny (get, update, delete) - Authenticated user with UID 'user456' attempts to read, update, or delete the user document with ID 'user123'.
     * @deny (list) - Listing all users is prohibited.
     * @principle Enforces document ownership for all operations on user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == userId;
      allow update: if isSignedIn() && isOwner(userId) && resource.data.id == userId;
      allow delete: if isSignedIn() && isOwner(userId) && resource.data.id == userId;
    }

    /**
     * @description Enforces user-ownership for simulations stored under /users/{userId}/simulations/{simulationId}.
     * @path /users/{userId}/simulations/{simulationId}
     * @allow (create) - Authenticated user with UID 'user123' creates a new simulation document under /users/user123/simulations/{simulationId}.
     * @allow (get, list, update, delete) - Authenticated user with UID 'user123' reads, lists, updates, or deletes their own simulation documents under /users/user123/simulations/{simulationId}.
     * @deny (create) - Authenticated user with UID 'user456' attempts to create a simulation document under /users/user123/simulations/{simulationId}.
     * @deny (get, list, update, delete) - Authenticated user with UID 'user456' attempts to read, list, update, or delete simulation documents under /users/user123/simulations/{simulationId}.
     * @principle Enforces document ownership for all operations on simulation data.
     */
    match /users/{userId}/simulations/{simulationId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }
  }
}