/**
 * @file Firestore Security Rules for EnerCost Analyzer
 * @version Prototyping
 * @core_philosophy This ruleset enforces a strict user-ownership model, ensuring that users can only access their own data.
 * @data_structure User data is stored under /users/{userId}, and simulations are stored under /users/{userId}/simulations/{simulationId}. This hierarchical structure provides a clear ownership model.
 * @key_security_decisions User listing is disallowed, as it is not a required feature and could expose user data. All data is private to the user, and no denormalization is required for authorization.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces that only the authenticated user can access their own user document.
     * @path /users/{userId}
     * @allow (create) - Authenticated user with UID 'user123' can create a document at /users/user123.
     * @allow (get, update, delete) - Authenticated user with UID 'user123' can access their own document at /users/user123.
     * @deny (create) - Authenticated user with UID 'user456' cannot create a document at /users/user123.
     * @deny (get, update, delete) - Authenticated user with UID 'user456' cannot access the document at /users/user123.
     * @deny (list) - Listing of users is not allowed.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn() && isOwner(userId) ;
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }

    /**
     * @description Enforces that only the authenticated user can access their own simulations.
     * @path /users/{userId}/simulations/{simulationId}
     * @allow (create) - Authenticated user with UID 'user123' can create a simulation document under /users/user123/simulations/sim123.
     * @allow (get, update, delete) - Authenticated user with UID 'user123' can access their own simulation document under /users/user123/simulations/sim123.
     * @deny (create) - Authenticated user with UID 'user456' cannot create a simulation document under /users/user123/simulations/sim123.
     * @deny (get, update, delete) - Authenticated user with UID 'user456' cannot access the simulation document under /users/user123/simulations/sim123.
     * @principle Restricts access to a user's own data tree.
     */
    match /users/{userId}/simulations/{simulationId} {
       function isSignedIn() {
        return request.auth != null;
      }
      function isOwner(userId) {
        return request.auth.uid == userId;
      }
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }
  }
}